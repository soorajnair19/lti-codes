package com.lnt.mvc.dao;

import java.util.List;

import javax.persistence.Query;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.lnt.mvc.model.Department;
import com.lnt.mvc.model.Employee;

public class DepartmentDaoImpl implements DepartmentDao{
	private static final Logger logger = 			
			LoggerFactory.getLogger(PersonDaoImpl.class);

	private SessionFactory sessionFactory;

	@Override
	public void createDepartmentDetails(Department department) {
		Session session = this.sessionFactory.getCurrentSession();
		session.save(department);
		logger.info("Department details saved successfully");
		
	}

	@Override
	public void updateDepartmentDetails(Department department) {
		Session session = this.sessionFactory.getCurrentSession();
		session.update(department);
		logger.info("Department updated successfully"+"Employee details="+department);
		
	}

	@Override
	public void deleteDepartmentDetails(int dep_id) {
		Session session = this.sessionFactory.getCurrentSession();
		Department dep = (Department)session.load(Department.class, new Integer(dep_id));
		if(null!= dep)
		{
			session.delete(dep);
			}
		else
		{
		logger.error("Employee not deleted with id="+dep_id);	
		}
		logger.info("Employee deleted successfully, Employee details="+dep);
		
	}

	@Override
	public List<Department> getAllDepartmentDetails() {
		Session session = this.sessionFactory.getCurrentSession();
		@SuppressWarnings("unchecked")
		List<Department> dlist = session.createQuery("from Deparment").list();
		for(Department d: dlist)
		{
			logger.info("Department List: "+d);
		}
		
		return dlist;
	}

	@Override
	public Department getDepartmentDetails(int department) {
		Session session = this.sessionFactory.getCurrentSession();
		Department d = (Department)session.load(Department.class, new Integer(department));
		logger.info("Department loaded successfully, Department details=" +d);
		
		return d;
	}

	@Override
	public List<Department> getByName(String name) {
		Session session = this.sessionFactory.getCurrentSession();
		String hql = "from Department d where d.departmentName like :names";
		Query query = session.createQuery(hql);
		query.setParameter("names", name+"%");
		List <Department> dep = query.list();
		return dep;
	}

}
